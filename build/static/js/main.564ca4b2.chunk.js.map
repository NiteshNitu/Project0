{"version":3,"sources":["actions/index.js","actions/types.js","components/surveys/SurveyList.js","components/Dashboard.js","components/Header.js","components/Landing.js","components/surveys/SurveyField.js","utils/validateEmails.js","components/surveys/SurveyForm.js","components/surveys/SurveyFormReview.js","components/surveys/SurveyNew.js","components/App.js","reducers/index.js","reducers/authReducer.js","reducers/surveysReducer.js","index.js"],"names":["fetchUser","dispatch","a","axios","get","res","type","payload","data","submitSurvey","values","history","post","push","fetchSurveys","SurveyList","this","props","surveys","reverse","map","survey","className","key","_id","title","body","Date","dateSent","toLocaleDateString","renderSurveys","Component","connect","state","Dashboard","to","class","Header","auth","href","style","margin","credits","renderContent","Landing","textAlign","input","label","meta","touched","error","console","log","marginBottom","re","emails","invalidEmails","split","email","trim","filter","test","length","SurveyForm","Field","name","component","SurveyField","onSubmit","handleSubmit","onSurveySubmit","renderFields","reduxForm","validate","errors","recipients","validateEmails","subject","form","destroyOnUnmount","formValues","surveyForm","actions","withRouter","onCancel","onClick","SurveyNew","showFormReview","setState","App","exact","path","combineReducers","action","window","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.564ca4b2.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {FETCH_USER, FETCH_SURVEYS} from './types';\r\n\r\n// actionCreators that are functions that return actions\r\n\r\n// export const changeLogin = shouldBeLoggedIn => {\r\n//     return {\r\n//         type: 'change_auth', \r\n//         payload: shouldBeLoggedIn\r\n//     };\r\n// };\r\n\r\nexport const fetchUser = () => {\r\n    return async (dispatch) => {\r\n        const res = await axios.get('/api/current_user');\r\n        dispatch({ type: FETCH_USER, payload: res.data });\r\n    };\r\n};\r\n\r\n\r\nexport const submitSurvey = (values, history) => async dispatch => {\r\n    const res = await axios.post('/api/surveys', values);\r\n    history.push('/surveys');\r\n    dispatch({ type: FETCH_USER, payload: res.data });\r\n};\r\n\r\nexport const fetchSurveys = () => async dispatch => {\r\n    const res = await axios.get('/api/surveys');\r\n    \r\n    dispatch({ type: FETCH_SURVEYS, payload: res.data });\r\n};","export const FETCH_USER = 'fetch';\r\nexport const FETCH_SURVEYS = 'fetch_surveys';\r\n","import React , { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchSurveys }  from '../../actions';\r\n\r\nclass SurveyList extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchSurveys(); \r\n    }\r\n\r\n    renderSurveys() {\r\n        return this.props.surveys.reverse().map(survey => {\r\n            return (\r\n                <div className = \"card blue-grey darken-1\" key = {survey._id}>\r\n                    <div className = \"card-content\">\r\n                        <span className = \"card-title\">{survey.title}</span>\r\n                        <p>\r\n                            {survey.body}\r\n                        </p>\r\n                        <p className = \"right\">\r\n                            Sent On: { new Date(survey.dateSent).toLocaleDateString() }\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderSurveys()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { surveys: state.surveys };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchSurveys })(SurveyList);","import React from 'react';\r\nimport { Link  } from 'react-router-dom';\r\nimport SurveyList from './surveys/SurveyList';\r\n\r\nconst Dashboard = () => {\r\n    return (\r\n        <div>\r\n            Dashboard\r\n            <SurveyList />\r\n            <div className = \"fixed-action-btn\">\r\n                <Link to  = '/surveys/new' class=\"btn-floating btn-large waves-effect waves-light red\">\r\n                    <i class=\"material-icons\">add</i>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard; ","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    renderContent() {\r\n        switch(this.props.auth) {\r\n            case null:\r\n                return ;\r\n            case false:\r\n                return <li><a href = \"/auth/google\">Login With Google</a></li>;\r\n            default:\r\n                return [\r\n                    <li key = \"1\" style={{ margin: '0px 10px'}}>\r\n                        Credits: {this.props.auth.credits}\r\n                    </li>,\r\n                    <li key = \"2\"><a href = \"/api/logout\">Logout</a></li>\r\n                ]\r\n        }\r\n    }   \r\n    render() {\r\n        return (\r\n            <nav>\r\n                <div className = \"nav-wrapper\">\r\n                    <Link \r\n                        to = { this.props.auth ? '/surveys' : '/'} \r\n                        className = \"left brand-logo\"\r\n                    >\r\n                        Emaily\r\n                    </Link>\r\n                    <ul className = \"right\">\r\n                        {this.renderContent()}\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ auth }) {\r\n    return { auth };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);","import React from 'react';\r\n\r\nconst Landing = () => {\r\n    return (\r\n        <div style = {{ textAlign: \"center\" }}>\r\n            <h2>\r\n                Emaily...\r\n            </h2>\r\n            Collect User Details.\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Landing;\r\n\r\n","\r\nimport React from 'react';\r\n\r\nexport default ({ input, label, meta: {touched, error} }) => {\r\n    console.log(input);\r\n    return (\r\n        <div>\r\n            <label>{label}</label>\r\n            <input {...input} style = {{marginBottom: '5px' }}/>\r\n            <div className=\"red-text\" style = {{marginBottom: '20px'}}>\r\n                {touched && error}\r\n            </div>\r\n        </div>\r\n    );\r\n}","const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n\r\nexport default (emails) => {\r\n    const invalidEmails = emails\r\n                        .split(',')\r\n                        .map(email => email.trim())\r\n                        .filter(email => (re.test(email) === false || email === ''));\r\n    if(invalidEmails.length) {\r\n        return `The list of INVALID emails are: { ${invalidEmails} } `;\r\n    }\r\n    return ;\r\n};","import React, { Component } from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport SurveyField from './SurveyField';\r\nimport { Link } from 'react-router-dom'; \r\nimport validateEmails from '../../utils/validateEmails';\r\n\r\nclass SurveyForm extends Component {\r\n    renderFields() {\r\n        return (\r\n            <div>\r\n                <Field \r\n                    label = \"Survey Title\" \r\n                    type = \"text\" \r\n                    name = \"title\" \r\n                    component  = {SurveyField}\r\n                />\r\n                <Field \r\n                    label = \"Survey Subject\" \r\n                    type = \"text\" \r\n                    name = \"subject\" \r\n                    component  = {SurveyField}\r\n                />\r\n                <Field \r\n                    label = \"Email Body\" \r\n                    type = \"text\" \r\n                    name = \"body\" \r\n                    component  = {SurveyField}\r\n                />\r\n                <Field \r\n                    label = \"Recipient List\" \r\n                    type = \"text\" \r\n                    name = \"recipients\" \r\n                    component  = {SurveyField}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit =  {this.props.handleSubmit(\r\n                                    /*(values) => { console.log(values) } */\r\n                                    this.props.onSurveySubmit)}>\r\n                    {this.renderFields()}\r\n                    {/* <Field type = \"text\" name = \"surveyTitle\" component = \"input\" /> */}\r\n                    <Link to = \"/surveys\" className = \"red btn-flat left white-text\">Cancel</Link>\r\n                    <button type=\"submit\" className = \"teal btn-flat right white-text\">\r\n                        Next\r\n                        <i className = \"material-icons right\">done</i>    \r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction validate(values) {\r\n    const errors  = {};\r\n    \r\n    errors.recipients = validateEmails(values.recipients || '');\r\n\r\n    if(!values.title) {\r\n        errors.title = 'You need to provide some title';\r\n    }\r\n    if(!values.subject) {\r\n        errors.subject = 'You need to provide a subject';\r\n    }\r\n    if(!values.body) {\r\n        errors.body = 'You need to provide a body';\r\n    }\r\n    if(!values.recipients) {\r\n        errors.recipients = 'You need to provide a list of emails';\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n// Redux Form helper\r\nexport default reduxForm({\r\n    validate,\r\n    form: 'surveyForm', \r\n    destroyOnUnmount: false\r\n})(SurveyForm);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../actions';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst SurveyFormReview = ({ onCancel, formValues, submitSurvey, history }) => {\r\n    return (\r\n        <div>\r\n            <h4>Check Your Details And Proceed</h4>\r\n            <div>\r\n                <div>\r\n                    <label>Survey Title</label>\r\n                    <div>{formValues.title}</div>\r\n                </div>\r\n                <div>\r\n                    <label>Survey Subject</label>\r\n                    <div>{formValues.subject}</div>\r\n                </div>\r\n                <div>\r\n                    <label>Survey Body</label>\r\n                    <div>{formValues.body}</div>\r\n                </div>\r\n                <div>\r\n                    <label>Emails List</label>\r\n                    <div>{formValues.recipients}</div>\r\n                </div>\r\n            </div>\r\n            <button\r\n                className = \"yellow darken-3 btn-flat\"\r\n                onClick = {onCancel}\r\n            >\r\n                Back\r\n            </button>\r\n            <button\r\n                className = \"green btn-flat right\"\r\n                onClick = {() => submitSurvey(formValues, history)}\r\n            >\r\n                Send Emails\r\n                <i className = \"material-icons right\">email</i>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return { formValues: state.form.surveyForm.values };\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(withRouter(SurveyFormReview));","import React, { Component } from 'react';\r\nimport SurveyForm from './SurveyForm';\r\nimport SurveyFormReview from './SurveyFormReview';\r\nimport { reduxForm } from 'redux-form';\r\n\r\n\r\nclass SurveyNew extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n\r\n    //     this.state = { new: true };\r\n    // } //same statement below\r\n\r\n    state = { showFormReview: false };\r\n\r\n    renderContent() {\r\n        if(this.state.showFormReview) {\r\n            return <SurveyFormReview onCancel = {() => this.setState({ showFormReview: false })}/>\r\n        }\r\n        return <SurveyForm onSurveySubmit = {() => this.setState({ showFormReview: true })} />\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                { this.renderContent() }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'surveyForm'\r\n})(SurveyNew);","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../actions';\r\nimport Dashboard from './Dashboard';\r\nimport Header from './Header';\r\nimport Landing from './Landing';\r\nimport SurveyNew from './surveys/SurveyNew';\r\n\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchUser();\r\n    }\r\n    render () {\r\n        return (\r\n            <div className = \"container\">\r\n                <BrowserRouter> \r\n                    <div className = \"container\">\r\n                        <Header />\r\n                        <Route exact = {true} path = \"/\" component = {Landing} />\r\n                        <Route exact path = \"/surveys\" component = {Dashboard} />\r\n                        <Route exact path = \"/surveys/new\" component = {SurveyNew} />\r\n                        \r\n                    </div>\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, actions)(App);","import { combineReducers } from  'redux';\r\nimport { reducer as reduxForm } from \"redux-form\";\r\nimport authReducers from './authReducer';\r\nimport surveysReducer from './surveysReducer';\r\n\r\nexport default combineReducers ({\r\n    auth: authReducers,\r\n    form: reduxForm,\r\n    surveys: surveysReducer\r\n})","import { FETCH_USER } from '../actions/types';\r\n\r\nexport default function(state = null, action) {\r\n    switch(action.type) {\r\n        case FETCH_USER:\r\n            return action.payload || false; \r\n        default:\r\n            return state;\r\n    }\r\n}","import { FETCH_SURVEYS } from '../actions/types';\r\n\r\nexport default function(state = [], action) {\r\n    switch(action.type) {\r\n        case FETCH_SURVEYS: \r\n            return action.payload || false;\r\n        default:\r\n            return state;\r\n    }\r\n}","import 'materialize-css/dist/css/materialize.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport reduxThunk from 'redux-thunk'\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n// test code\r\nimport axios from 'axios';\r\nwindow.axios = axios;\r\n\r\n// index\r\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\r\n\r\nReactDOM.render(\r\n    <Provider store = {store}><App /></Provider>,\r\n    document.querySelector('#root'));\r\n    \r\n\r\n    "],"sourceRoot":""}